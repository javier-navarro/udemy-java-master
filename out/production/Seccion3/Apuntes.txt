===========================================
 Seccion 3: Tipo String: cadenas
===========================================
-------------------------------------------
 25. Introduccion a los strings
-------------------------------------------
    String nombre = "andres";
    String tema = "Manejo de \"string\"";

    para concatenar se ocupa +
    para comparar valores se debe ocupar equals.

    Algunos metodos importantes:
        -length()/int: devuelve el numero de caracteres de la cadena
        -equals(String b)/boolean: compara si las cadenas son iguales.
        -equalsIgnoreCase(String b)/boolean: compara si las cadenas son iguales, independiente de
            si estan en mayusculas/minusculas.
        -compareTo(String b)/int: compara contra la cadena del argumento devolviendo:
            *un valor negativo si la cadena es anterior a b
            *0 si la cadena es igual a b
            *un valor positivo si la cadena es posterior a b
        -trim()/String: Crea un nuevo objeto eliminando el espacio en blanco al principio o final.
        -charAt(int posicion)/char: Extrae un caracter en la posicion indicada.
        -toCharArray()/char[]: Convierte la cadena en un arreglo de caracteres.
        -substring(int a, int b)/String: Extrae la sub cadena entre la posicion a y b.
        -substring(int desde)/String: Extra Ã±a sub cadena desde la posicion indicada.
        -indexOf(String cadena)/ int: Indican en que posicion se encuentra el caracter(o cadena)
            indicado por primera vez, buscando desde el principio.
        -lastIndexOf(String Cadena)/int: Indican en que posicion se encuentra el caracter(o cadena)
            indicado por primera vez, buscando desde el final.
        -startsWith(String prefijo)/ boolean: Dice si la cadena comienza con el prefijo indicado
        -endsWith(String sufijo)/ boolean: Dice si la cadena termina con el sufijo indicado
        -split(String patron)/String[]: Divide la cadena en varias subcadenas utilizando el patron indicado
            como separador.
-----------------------------------------------
 27. Concatenando Strings
-----------------------------------------------
    si sumamos un string + algun otro dato los concatena, aun que sea un numero.

-----------------------------------------------
 30. Validando Strings
-----------------------------------------------
No se puede hacer ningun tipo de transformacion con un nulo, excepto con el +.
    *length() = da el largo de la cadena.
    *IsEmpty() = te dice si esta vacio. java 6
    *isBlank() = valida si es nulo, vacio y si tiene espacios en blanco. java 11

-----------------------------------------------
 30. metodos  Strings importantes [EjemploStringMetodos]
-----------------------------------------------